---
- name: Install reporting dependencies
  package:
    name:
      - python3
      - python3-pip
      - python3-devel
      - gcc
    state: present

- name: Install Python packages for reporting
  pip:
    name:
      - pandas
      - matplotlib
      - jupyter
      - sqlalchemy
      - pymysql
      - tabulate
      - jinja2
    state: present

- name: Check if reporting directory exists
  stat:
    path: /opt/reporting
  register: reporting_dir

- name: Check if output directory exists
  stat:
    path: /opt/reporting/output
  register: output_dir

- name: Create reporting scripts directory
  file:
    path: /opt/reporting
    state: directory
    mode: "0755"
  when: not reporting_dir.stat.exists

- name: Create output directory for reports
  file:
    path: /opt/reporting/output
    state: directory
    mode: "0755"
  when: not output_dir.stat.exists or not output_dir.stat.isdir

- name: Check if reporting scripts exist
  find:
    paths: /opt/reporting
    patterns: "*.py"
  register: existing_scripts

- name: Copy reporting scripts
  copy:
    src: "../templates/reporting/{{ item }}"
    dest: "/opt/reporting/{{ item | regex_replace('\\.j2$', '') }}"
    mode: "0755"
  loop:
    - daily_usage_report.py.j2
    - weekly_efficiency_report.py.j2
    - monthly_billing_report.py.j2
  when: existing_scripts.matched == 0

- name: Fetch updated scripts from remote server if needed
  shell: scp -r root@192.168.1.152:/home/psantana/playbooks-slurm/roles/reporting/templates/reporting/*.py /opt/reporting/
  args:
    creates: /opt/reporting/daily_usage_report.py
  when: existing_scripts.matched == 0 and ansible_hostname == 'slurm01'
  ignore_errors: yes

- name: Set up cron jobs for automated reports
  cron:
    name: "{{ item.name }}"
    job: "{{ item.job }}"
    hour: "{{ item.hour }}"
    minute: "{{ item.minute }}"
    weekday: "{{ item.weekday | default('*') }}"
    user: root
  loop:
    - name: "Daily usage report"
      job: "/opt/reporting/daily_usage_report.py"
      hour: "6"
      minute: "0"
    - name: "Weekly efficiency report"
      job: "/opt/reporting/weekly_efficiency_report.py"
      hour: "7"
      minute: "0"
      weekday: "1" # Monday
    - name: "Monthly billing report"
      job: "/opt/reporting/monthly_billing_report.py"
      hour: "5"
      minute: "0"
      weekday: "1"