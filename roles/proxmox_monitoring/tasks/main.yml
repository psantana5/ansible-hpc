---
# Proxmox power monitoring role

- name: Install required packages
  package:
    name:
      - bc
      - curl
      - python3
      - python3-pip
      - prometheus-node-exporter
    state: present

- name: Create monitoring directory
  file:
    path: /opt/proxmox_power_monitoring
    state: directory
    mode: '0755'

- name: Copy power monitoring script as template
  template:
    src: script.sh.j2
    dest: /opt/proxmox_power_monitoring/script.sh
    mode: '0755'

- name: Create systemd service for power monitoring
  template:
    src: power-exporter.service.j2
    dest: /etc/systemd/system/power-exporter.service
    mode: '0644'
  notify: restart power exporter

- name: Configure node_exporter to read power metrics
  lineinfile:
    path: /etc/default/prometheus-node-exporter
    regexp: '^ARGS=".*"'
    line: 'ARGS="--collector.textfile.directory=/tmp"'
  notify: restart node exporter

- name: Enable and start power exporter service
  systemd:
    name: power-exporter
    enabled: yes
    state: started

- name: Copy Grafana dashboard JSON
  copy:
    content: "{{ lookup('file', 'templates/proxmox_power_dashboard.json') }}"
    dest: /opt/proxmox_power_monitoring/proxmox_power_dashboard.json
    mode: '0644'
  tags: grafana

- name: Check if Grafana dashboard already exists
  uri:
    url: "http://{{ grafana_host | default('localhost') }}:{{ grafana_port | default(3000) }}/api/dashboards/uid/proxmox-power-monitoring"
    method: GET
    headers:
      Authorization: "Bearer {{ grafana_api_key }}"
    status_code: [200, 404]
  delegate_to: localhost
  become: no
  register: dashboard_check
  failed_when: false
  check_mode: no  # Run this task even in check mode
  tags: grafana

- name: Deploy dashboard to Grafana
  uri:
    url: "http://{{ grafana_host | default('localhost') }}:{{ grafana_port | default(3000) }}/api/dashboards/db"
    method: POST
    headers:
      Authorization: "Bearer {{ grafana_api_key }}"
      Content-Type: "application/json"
    body_format: json
    body:
      dashboard: "{{ lookup('file', 'templates/proxmox_power_dashboard.json') | from_json | combine({'uid': 'proxmox-power-monitoring'}) }}"
      overwrite: true
      message: "Updated by Ansible"
    status_code: 200
  delegate_to: localhost
  become: no
  register: grafana_dashboard_result
  when: not ansible_check_mode  # Only deploy in real mode, not check mode
  tags: grafana

- name: Display Grafana dashboard deployment result
  debug:
    var: grafana_dashboard_result
    verbosity: 1
  tags: grafana
