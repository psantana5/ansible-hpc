---
- name: Update dnf cache
  ansible.builtin.dnf:
    update_cache: yes

- name: Install Development Tools group
  ansible.builtin.dnf:
    name: "@Development Tools"
    state: present

- name: Install OpenLDAP packages and development dependencies
  ansible.builtin.dnf:
    name:
      - openldap-servers # Contains slapd binary
      - openldap
      - openldap-clients
      - openldap-devel
      - python3-devel
      - gcc
      - cyrus-sasl-devel # Add this for SASL support
    state: present

- name: Check if virtual environment exists
  ansible.builtin.stat:
    path: "/home/psantana/.venv/bin/pip"
  register: venv_pip
  become: no
  ignore_errors: yes

- name: Create Python virtual environment if it doesn't exist
  ansible.builtin.command: python3 -m venv /home/psantana/.venv
  become: no
  when: venv_pip is failed or (venv_pip.stat is defined and not venv_pip.stat.exists)

- name: Install Python LDAP packages with system pip
  ansible.builtin.pip:
    name: python-ldap
    state: present
  become: yes

- name: Install Python LDAP packages with venv pip
  ansible.builtin.pip:
    name: pyldap
    executable: "/home/psantana/.venv/bin/pip"
  become: no
  ignore_errors: yes
  when: ldap_install_python_packages | default(true) | bool

- name: Create LDAP system group
  ansible.builtin.group:
    name: ldap
    state: present
    system: yes
    gid: 55

- name: Create LDAP system user
  ansible.builtin.user:
    name: ldap
    state: present
    system: yes
    uid: 55
    group: ldap
    home: /var/lib/ldap
    create_home: no
    shell: /sbin/nologin

- name: Create OpenLDAP data directory
  file:
    path: /var/lib/ldap
    state: directory
    owner: ldap
    group: ldap
    mode: "0750"

- name: Create OpenLDAP config directory
  file:
    path: /etc/openldap/slapd.d
    state: directory
    owner: ldap
    group: ldap
    mode: "0750"

- name: Create slapd environment directory
  ansible.builtin.file:
    path: /etc/sysconfig
    state: directory
    mode: "0755"

- name: Create slapd environment configuration
  ansible.builtin.copy:
    dest: /etc/sysconfig/slapd
    content: |
      SLAPD_OPTIONS="-F /etc/openldap/slapd.d"
    owner: root
    group: root
    mode: "0644"
  notify: daemon-reload

# Fix the slapd.conf permissions first
- name: Copy slapd.conf template
  template:
    src: slapd.conf.j2
    dest: /etc/openldap/slapd.conf
    owner: ldap # Changed from root to ldap
    group: ldap # Changed from root to ldap
    mode: "0640"
  notify: restart slapd

- name: Copy LDIF template for initial setup
  template:
    src: initial.ldif.j2
    dest: /etc/openldap/initial.ldif
    owner: ldap
    group: ldap
    mode: "0640"

- name: Check if slapd service file exists
  ansible.builtin.stat:
    path: /usr/lib/systemd/system/slapd.service # Verify this path matches your OS
    get_checksum: no
  register: slapd_service_file

- name: Create slapd systemd service file
  ansible.builtin.template:
    src: slapd.service.j2
    dest: /usr/lib/systemd/system/slapd.service
    mode: "0644"
  when: not slapd_service_file.stat.exists
  notify:
    - daemon-reload
    - restart slapd

- name: Start and enable slapd service
  ansible.builtin.systemd:
    name: slapd
    state: started
    enabled: "{{ ldap_enable_service | default(true) }}"
  when: ldap_start_service | default(true) | bool
  notify: restart slapd

- name: Wait for slapd to be ready
  wait_for:
    host: "{{ ansible_default_ipv4.address | default('0.0.0.0') }}"
    port: 389
    timeout: 30
    state: started
  when: ldap_start_service | default(true) | bool

- name: Stop slapd service before database initialization
  service:
    name: slapd
    state: stopped
  register: slapd_stopped
  until: slapd_stopped is succeeded
  retries: 3
  delay: 5

- name: Force remove slapd config directory
  ansible.builtin.file:
    path: /etc/openldap/slapd.d
    state: absent
  become: yes

- name: Force remove LDAP database directory
  ansible.builtin.file:
    path: /var/lib/ldap
    state: absent
  become: yes

- name: Create fresh database directory
  ansible.builtin.file:
    path: /var/lib/ldap
    state: directory
    owner: ldap
    group: ldap
    mode: "0750"

- name: Recreate slapd config directory
  ansible.builtin.file:
    path: /etc/openldap/slapd.d
    state: directory
    owner: ldap
    group: ldap
    mode: "0750"

- name: Set SELinux context for LDAP directories
  ansible.builtin.command: "restorecon -Rv /var/lib/ldap"
  become: yes
  ignore_errors: yes
  when: ansible_selinux.status == "enabled"

- name: Generate slapd configuration from slapd.conf
  command: slaptest -f /etc/openldap/slapd.conf -F /etc/openldap/slapd.d
  become: yes
  become_user: ldap
  environment:
    HOME: /var/lib/ldap
  changed_when: false  # Add this to make task idempotent
  args:
    creates: /etc/openldap/slapd.d/cn=config.ldif

- name: Initialize database directly with slapadd
  command: slapadd -f /etc/openldap/slapd.conf -l /etc/openldap/initial.ldif
  become: yes
  become_user: ldap
  environment:
    HOME: /var/lib/ldap
  args:
    removes: /var/lib/ldap/data.mdb  # Ensure clean slate
