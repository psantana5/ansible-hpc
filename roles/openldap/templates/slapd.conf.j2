# Ansible Managed: {{ ansible_managed }}
#
# OpenLDAP slapd configuration file (slapd.conf)
# This file is used by 'slaptest' to generate the dynamic configuration in slapd.d
# Do NOT edit slapd.d directly unless you know what you are doing.

# Schema includes
include {{ ldap_config_dir }}/schema/core.schema
include {{ ldap_config_dir }}/schema/cosine.schema
include {{ ldap_config_dir }}/schema/inetorgperson.schema
include {{ ldap_config_dir }}/schema/nis.schema
# Add other schemas if needed (e.g., sudo, openssh-lpk)
# include {{ ldap_config_dir }}/schema/sudo.schema

# PID and arguments files (ensure parent dir exists and has correct permissions)
pidfile         {{ ldap_pid_file }}
argsfile        {{ ldap_args_file }}

# Module settings (ensure back_mdb is available)
modulepath      /usr/lib64/openldap
moduleload      back_mdb.la
# moduleload    syncprov.la # Add if replication is needed

# Main Database definition (mdb)
database        mdb
suffix          "{{ ldap_base_dn }}"
rootdn          "{{ ldap_root_dn }}"
# Use the hash generated by Ansible for initial setup via slaptest/slapadd
rootpw          "{{ ldap_admin_password_hash }}"

# Data directory (ensure correct ownership/permissions/SELinux context)
directory       {{ ldap_data_dir }}

# Logging level (adjust as needed for debugging)
# See 'man slapd-config' for log levels
loglevel        {{ ldap_log_level }}

# Indexes - Important for search performance
# eq: equality match
# pres: presence match
# sub: substring match (can impact performance, use judiciously)
{% set no_sub_attrs = ['objectClass', 'uidNumber', 'gidNumber', 'loginShell', 'homeDirectory', 'member'] %}
{% for attr_name in ldap_indexes | unique %}
{% if attr_name in no_sub_attrs %}
index {{ attr_name }} eq,pres
{% else %}
index {{ attr_name }} eq,pres,sub
{% endif %}
{% endfor %}
# index default eq,pres # Optional: Default index for unlisted attributes

# Access Control Lists (ACLs) - Modify carefully
# Allow admin full write access
access to *
  by dn.exact="{{ ldap_root_dn }}" write
  # Add other admin groups or users if needed:
  # by dn.subtree="ou=Admins,{{ ldap_base_dn }}" write
  # Allow users to change their own password and certain attributes
  by self write
  # Allow authenticated users read access (adjust as needed)
  by users read
  # Allow anonymous read access (consider restricting this in production)
  by anonymous read

# Specific ACL for userPassword
access to attrs=userPassword,shadowLastChange
  by dn.exact="{{ ldap_root_dn }}" write
  # by dn.subtree="ou=Admins,{{ ldap_base_dn }}" write
  by self write
  by anonymous auth # Allow anonymous binds for password comparison
  by * none

# Deny access to everything else for non-matching conditions above
access to *
  by * none

# --- IMPORTANT ---
# The 'database config' section should NOT be in slapd.conf
# when using slaptest to generate slapd.d.
# Configuration backend (cn=config) is managed dynamically via ldapmodify.