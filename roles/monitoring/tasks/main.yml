---
- name: Update package database
  dnf:
    update_cache: yes
  changed_when: false  # This operation just updates cache, not a real change

- name: Add Docker repository
  get_url:
    url: https://download.docker.com/linux/centos/docker-ce.repo
    dest: /etc/yum.repos.d/docker-ce.repo
    mode: "0644"
  register: docker_repo

- name: Install required packages
  package:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-compose-plugin
      - python3-pip
    state: present

- name: Install Python Docker module with pip
  pip:
    name: docker
    state: present

- name: Ensure Docker service is running
  service:
    name: docker
    state: started
    enabled: yes

- name: Create directories for monitoring
  file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
  with_items:
    - /opt/monitoring/prometheus
    - /opt/monitoring/prometheus/data
    - /opt/monitoring/grafana
    - /opt/monitoring/grafana/data
    - /opt/monitoring/grafana/provisioning/datasources
    - /opt/monitoring/grafana/provisioning/dashboards
    - /opt/monitoring/grafana/dashboards

- name: Copy Prometheus configuration
  template:
    src: prometheus.yml.j2
    dest: /opt/monitoring/prometheus/prometheus.yml
    mode: "0644"
  register: prometheus_config
  notify: restart prometheus container

- name: Copy Prometheus alert rules
  template:
    src: alert_rules.yml.j2
    dest: /opt/monitoring/prometheus/alert_rules.yml
    mode: "0644"
  register: prometheus_alerts
  notify: restart prometheus container

- name: Copy Grafana datasource configuration
  template:
    src: datasource.yml.j2
    dest: /opt/monitoring/grafana/provisioning/datasources/datasource.yml
    mode: "0644"
  register: grafana_datasource
  notify: restart grafana container
  vars:
    prometheus_ip: "{{ hostvars['services01']['ansible_host'] }}"

- name: Copy Grafana dashboard provisioning configuration
  template:
    src: dashboards.yml.j2
    dest: /opt/monitoring/grafana/provisioning/dashboards/dashboards.yml
    mode: "0644"
  register: grafana_dashboards
  notify: restart grafana container

- name: Copy Node Exporter dashboard
  copy:
    src: node_exporter.json
    dest: /opt/monitoring/grafana/dashboards/node_exporter.json
    mode: "0644"
  register: node_exporter_dashboard
  notify: restart grafana container

- name: Copy power monitoring for nodes dashboard
  copy:
    src: proxmox_power_dashboard.json
    dest: /opt/monitoring/grafana/dashboards/proxmox_power_dashboard.json
    mode: "0644"
  register: proxmox_dashboard
  notify: restart grafana container

- name: Set proper permissions for monitoring directories
  file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
    owner: "1000"
    group: "1000"
    recurse: yes
  with_items:
    - /opt/monitoring/prometheus/data
    - /opt/monitoring/grafana/data

- name: Copy docker-compose file
  template:
    src: docker-compose.yml.j2
    dest: /opt/monitoring/docker-compose.yml
    mode: "0644"
  register: docker_compose_file

- name: Check if monitoring stack is running
  command: docker ps -q --filter "name=prometheus|grafana"
  register: monitoring_containers
  changed_when: false

- name: Start monitoring stack with docker-compose
  command: docker compose -f /opt/monitoring/docker-compose.yml up -d
  args:
    chdir: /opt/monitoring
  when: docker_compose_file.changed or prometheus_config.changed or prometheus_alerts.changed or grafana_datasource.changed or grafana_dashboards.changed or node_exporter_dashboard.changed or (proxmox_dashboard is defined and proxmox_dashboard.changed) or monitoring_containers.stdout == ""

- name: Copy Slurm power dashboard to Grafana
  template:
    src: slurm_power_dashboard.json.j2
    dest: /opt/monitoring/grafana/provisioning/dashboards/slurm_power_dashboard.json
    mode: "0644"
  register: slurm_power_dashboard
