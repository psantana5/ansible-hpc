---
- name: Test Monitoring Integration
  hosts: monitoring_servers
  become: yes
  gather_facts: yes
  
  tasks:
    - name: Verify node_exporter metrics are being collected
      uri:
        url: "http://localhost:9090/api/v1/query?query=up{job=\"node\"}"
        return_content: yes
      register: node_metrics
      ignore_errors: yes
      
    - name: Record node_exporter metrics test result
      set_fact:
        node_metrics_status: "{{ 'PASSED' if node_metrics.status|default(0) == 200 and node_metrics.content is defined else 'FAILED: Node exporter metrics not being collected' }}"
      ignore_errors: yes
      
    - name: Verify SLURM metrics are being collected
      uri:
        url: "http://localhost:9090/api/v1/query?query=slurm_jobs"
        return_content: yes
      register: slurm_metrics
      ignore_errors: yes
      
    - name: Record SLURM metrics test result
      set_fact:
        slurm_metrics_status: "{{ 'PASSED' if slurm_metrics.status|default(0) == 200 and slurm_metrics.content is defined else 'FAILED: SLURM metrics not being collected' }}"
      ignore_errors: yes
      
    - name: Verify power monitoring metrics are being collected
      uri:
        url: "http://localhost:9090/api/v1/query?query=node_power_usage_watts"
        return_content: yes
      register: power_metrics
      ignore_errors: yes
      
    - name: Record power metrics test result
      set_fact:
        power_metrics_status: "{{ 'PASSED' if power_metrics.status|default(0) == 200 and power_metrics.content is defined and '\"value\":[' in power_metrics.content|default('') else 'FAILED: Power monitoring metrics not being collected' }}"
      ignore_errors: yes
      
    - name: Check Grafana dashboards
      uri:
        url: "http://localhost:3000/api/search?query=SLURM"
        headers:
          Authorization: "Bearer {{ grafana_api_key | default('') }}"
        return_content: yes
      register: grafana_dashboards
      ignore_errors: yes
      
    - name: Record Grafana dashboards test result
      set_fact:
        grafana_dashboards_status: "{{ 'PASSED' if grafana_dashboards.status|default(0) == 200 and grafana_dashboards.json is defined and grafana_dashboards.json|length > 0 else 'FAILED: Grafana dashboards not found' }}"
      ignore_errors: yes
      
    - name: Verify Prometheus targets are up
      uri:
        url: "http://localhost:9090/api/v1/targets"
        return_content: yes
        validate_certs: no
      register: prometheus_targets
      ignore_errors: yes
      
    - name: Record Prometheus targets test result
      set_fact:
        prometheus_targets_status: >-
          {% if prometheus_targets.status|default(0) == 200 and 
                prometheus_targets.json is defined and 
                prometheus_targets.json.data.activeTargets|length > 0 %}
          PASSED: {{ prometheus_targets.json.data.activeTargets|selectattr('health', 'equalto', 'up')|list|length }} targets up
          {% else %}
          FAILED: No active Prometheus targets or API call failed
          {% endif %}
      ignore_errors: yes
      
    - name: Summarize monitoring integration tests
      debug:
        msg: |
          Monitoring Integration Tests Summary:
          - Node Exporter Metrics: {{ node_metrics_status }}
          - SLURM Metrics: {{ slurm_metrics_status }}
          - Power Monitoring Metrics: {{ power_metrics_status }}
          - Grafana Dashboards: {{ grafana_dashboards_status }}
          - Prometheus Targets: {{ prometheus_targets_status }}
      ignore_errors: yes
      
    - name: Write monitoring integration test results to file
      delegate_to: localhost
      copy:
        content: |
          Monitoring Integration Tests Summary:
          - Node Exporter Metrics: {{ node_metrics_status }}
          - SLURM Metrics: {{ slurm_metrics_status }}
          - Power Monitoring Metrics: {{ power_metrics_status }}
          - Grafana Dashboards: {{ grafana_dashboards_status }}
          - Prometheus Targets: {{ prometheus_targets_status }}
        dest: "/home/psantana/playbooks-slurm/tests/results/{{ hostvars['localhost']['test_run_id'] }}/monitoring_integration_tests.txt"
      ignore_errors: yes