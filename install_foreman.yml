---
- name: Install Foreman Server
  hosts: foreman_server # Target host(s) defined in your inventory
  become: true # Most tasks require root privileges
  vars:
    # --- Customizable Variables ---
    # IMPORTANT: Set this to the desired FULLY QUALIFIED domain name (FQDN)
    # Example: foreman.mydomain.local, foreman.dev.example.com
    foreman_hostname: "foreman01.example.com" # <<< CHANGE THIS TO YOUR ACTUAL DESIRED FQDN
    foreman_version: "3.10" # Specify the Foreman version branch
    puppet_version: "7" # Specify the Puppet version compatible with Foreman
    # Ports required by Foreman and default Smart Proxy
    firewall_ports_tcp:
      - 80 # HTTP
      - 443 # HTTPS
      - 5647 # Katello (if installed/enabled via installer later) - good to have open
      - 8443 # Dynflow
      - 9090 # Smart Proxy TFTP/HTTPBoot
    # --- End Customizable Variables ---

    # Derived variables (usually no need to change)
    foreman_repo_url: "https://yum.theforeman.org/releases/{{ foreman_version }}/el{{ ansible_distribution_major_version }}/x86_64/foreman-release.rpm"
    puppet_repo_url: "https://yum.puppet.com/puppet{{ puppet_version }}-release-el-{{ ansible_distribution_major_version }}.noarch.rpm"
    epel_repo_package: "epel-release"
    foreman_installer_package: "foreman-installer"
    foreman_answers_file: "/etc/foreman-installer/scenarios.d/foreman-answers.yaml" # Used for idempotency check
    foreman_short_hostname: "{{ foreman_hostname.split('.')[0] }}" # Extracts short name (e.g., 'foreman01')

  pre_tasks:
    - name: Fail if foreman_hostname is not an FQDN
      ansible.builtin.fail:
        msg: "The 'foreman_hostname' variable ('{{ foreman_hostname }}') must be a Fully Qualified Domain Name (FQDN) containing at least one dot (e.g., foreman.example.com)."
      when: "'.' not in foreman_hostname"

    - name: Ensure hostname is set correctly to FQDN
      ansible.builtin.hostname:
        name: "{{ foreman_hostname }}"
      # Only run if the current reported FQDN doesn't match the desired one
      when: ansible_facts.fqdn | default('') != foreman_hostname
      notify: Update ansible_facts post hostname change # Refresh facts if hostname changed

    - name: Ensure FQDN resolves locally in /etc/hosts
      ansible.builtin.lineinfile:
        path: /etc/hosts
        # Match line starting with the primary IP address
        regexp: '^{{ ansible_facts.default_ipv4.address }}\s+'
        # Ensure the line has IP, FQDN, and short name in the correct order
        line: "{{ ansible_facts.default_ipv4.address }} {{ foreman_hostname }} {{ foreman_short_hostname }}"
        state: present
      when: ansible_facts.default_ipv4.address is defined # Only run if IP fact is available

    - name: Flush handlers to apply hostname changes immediately if needed
      ansible.builtin.meta: flush_handlers

  tasks:
    - name: Ensure EPEL repository is installed
      ansible.builtin.dnf:
        name: "{{ epel_repo_package }}"
        state: present
      register: epel_install
      retries: 3
      delay: 5
      until: epel_install is succeeded

    - name: Ensure Puppet repository is installed
      ansible.builtin.dnf:
        name: "{{ puppet_repo_url }}"
        state: present
        disable_gpg_check: true # Often needed for initial install, set to false if you import keys manually
      register: puppet_repo_install
      retries: 3
      delay: 5
      until: puppet_repo_install is succeeded

    - name: Ensure Foreman repository is installed
      ansible.builtin.dnf:
        name: "{{ foreman_repo_url }}"
        state: present
        disable_gpg_check: true # Often needed for initial install, set to false if you import keys manually
      register: foreman_repo_install
      retries: 3
      delay: 5
      until: foreman_repo_install is succeeded

    - name: Install Foreman Installer package
      ansible.builtin.dnf:
        name: "{{ foreman_installer_package }}"
        state: present
      register: installer_pkg_install
      retries: 3
      delay: 5
      until: installer_pkg_install is succeeded

    # Note: Foreman installer handles many system dependencies and configurations (Puppet Agent, PostgreSQL, etc.)
    - name: Run Foreman Installer (Idempotent Check via answers file)
      ansible.builtin.command: foreman-installer --verbose
      args:
        creates: "{{ foreman_answers_file }}" # Avoid re-running full install if answers file exists
      register: foreman_install_run
      changed_when: "'Success!' in foreman_install_run.stdout" # Consider successful if specific output present
      failed_when: "'Success!' not in foreman_install_run.stdout and foreman_install_run.rc != 0"
      async: 1800 # Installer can take a long time (30 mins)
      poll: 15 # Check status every 15 seconds

    # SELinux is often handled by foreman-installer modules, but setting permissive can prevent issues during initial install.
    # Review Foreman docs and your security policy if you need enforcing mode.
    - name: Set SELinux to permissive mode
      ansible.posix.selinux:
        policy: targeted
        state: permissive
      notify: Reboot server if SELinux state changed # Recommended if changing from enforcing

    - name: Configure Firewall (firewalld)
      ansible.posix.firewalld:
        port: "{{ item }}/tcp"
        permanent: true
        state: enabled
        immediate: true # Apply changes immediately without needing firewall service restart
      loop: "{{ firewall_ports_tcp }}"
      when: ansible_facts.services['firewalld.service'] is defined and ansible_facts.services['firewalld.service'].state == 'running'
      # Check if firewalld is running before attempting to modify rules

    - name: Ensure firewalld service is enabled and running
      ansible.builtin.systemd:
        name: firewalld
        state: started
        enabled: true
      when: ansible_facts.services['firewalld.service'] is defined # Only manage if service exists

  handlers:
    - name: Reboot server if SELinux state changed
      ansible.builtin.reboot:
        msg: "Rebooting server to apply SELinux state change."
        connect_timeout: 5
        reboot_timeout: 600
        pre_reboot_delay: 0
        post_reboot_delay: 30
        test_command: uptime

    - name: Update ansible_facts post hostname change
      ansible.builtin.setup:
      # This handler is notified by the hostname task.
      # It forces Ansible to re-gather facts so subsequent tasks
      # (like the /etc/hosts one if it ran after) use the new hostname/fqdn facts.
